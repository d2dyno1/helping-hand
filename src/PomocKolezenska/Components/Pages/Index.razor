@page "/"

@inject ApplicationDbContext ApplicationDbContext
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject UserService UserService

<div>
    <CascadingAuthenticationState>
        <AuthorizeView>
            <NotAuthorized>
                <div class="d-flex justify-content-center align-items-center">
                    <div class="d-flex flex-column rounded-3 w-50 align-items-center justify-content-center p-5 bg-body-secondary">
                        <h2>
                            Witamy w Helping Hand!
                        </h2>
                        <p>
                            Zaloguj się, aby kontynuować
                        </p>
                    </div>
                </div>
            </NotAuthorized>
            <Authorized>
                <div class="p-2">
                    <div class="d-flex align-items-center justify-content-between">
                        <h2 style="display: inline-block">Twoje pytania</h2>
                        <Button Color="ButtonColor.Success" @onclick="@OpenNewQuestionModalAsync"><i class="bi bi-plus"></i></Button>
                    </div>
                    @if (UserQuestions.Count == 0)
                    {
                        <div class="mb-4 mt-2">Nie dodałeś jeszcze żadnych pytań</div>
                    }
                    <div>
                        @foreach (var question in UserQuestions)
                        {
                            <QuestionCard Question="@question"/>
                        }
                    </div>

                    <h2>
                        Najnowsze pytania
                    </h2>
                    @if (AllQuestions.Count == 0)
                    {
                        <div class="mb-4 mt-2">Brak dodanych pytań</div>
                    }
                    <div>
                        @foreach (var question in AllQuestions)
                        {
                            <QuestionCard Question="@question"></QuestionCard>
                        }
                    </div>
                </div>
            </Authorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
</div>

<StaticModal @ref="NewQuestionModal" Title="Zadaj pytanie" Size="ModalSize.Large">
    <BodyTemplate>
        <EditForm
            Model="@Model"
            FormName="NewQuestion"
            Enhance="true"
            OnValidSubmit="@OnSubmitAsync">

            <FieldSet>
                <Field>
                    <label>Tytuł pytania:</label>
                    <InputText placeholder="Wprowadź tytuł" class="form-control" @bind-Value="Model.Title"/>
                    <ValidationMessage For="() => Model.Title"/>
                </Field>
                <Field>
                    <label>Treść pytania:</label>
                    <InputTextArea placeholder="Wprowadź treść pytania. Pamiętaj, aby uwzględnić najważniejsze informacje" class="form-control" @bind-Value="Model.Content"/>
                    <ValidationMessage For="() => Model.Content"/>
                </Field>
            </FieldSet>

            <button type="submit" class="btn mt-3 btn-primary align-self-center">Zamieść pytanie</button>
        </EditForm>
    </BodyTemplate>
</StaticModal>