@attribute [IgnoreAntiforgeryToken]

@inject ApplicationDbContext ApplicationDbContext
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject UserService UserService

@namespace PomocKolezenska.Components.Pages

@page "/questions"
@using Microsoft.AspNetCore.Mvc

<h1>Pytania</h1>

<CascadingAuthenticationState>
    <AuthorizeView Context="a">
        <Authorized>
            <h3 style="display: inline-block">Twoje pytania</h3> 
            <Button Color="ButtonColor.Success" @onclick="@OpenNewQuestionModalAsync">Zadaj pytanie</Button>
            
            @foreach (var question in UserQuestions)
            {
                <QuestionCard Question="@question" />
            }
            
            <br/><br/>
        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>
<h3>Wszystkie pytania</h3>
@foreach (var question in AllQuestions)
{
    <QuestionCard Question="@question"></QuestionCard>
}

<StaticModal @ref="NewQuestionModal" Title="Zadaj pytanie" Size="ModalSize.Large">
    <BodyTemplate>
        <EditForm
            Model="@Model"
            FormName="NewQuestion"
            Enhance="true"
            OnValidSubmit="@OnSubmitAsync">

            <FieldSet>
                <Field Label="Tytuł:">
                    <InputText class="form-control" @bind-Value="Model.Title"/>
                    <ValidationMessage For="() => Model.Title"/>
                </Field>
                <Field Label="Treść:">
                    <InputText class="form-control" @bind-Value="Model.Content"/>
                    <ValidationMessage For="() => Model.Content"/>
                </Field>
            </FieldSet>

            <button type="submit" class="btn btn-primary align-self-center">Dodaj</button>
        </EditForm>
    </BodyTemplate>
</StaticModal>