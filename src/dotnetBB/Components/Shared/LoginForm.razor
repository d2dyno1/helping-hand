@using System.ComponentModel.DataAnnotations
<EditForm Model="@Model" FormName="@FormName" OnValidSubmit="@Submit" class="d-flex flex-column login-form flex-grow-1" method="post">
    <DataAnnotationsValidator/>
    @if (Error != null)
    {
        <div class="alert alert-danger" role="alert">
            <i class="bi-x-circle-fill me-2"></i> @Error
        </div>
    }
    <div class="row mb-3">
        <label for="email" class="col-sm-2 col-form-label">Email</label>
        <div class="col-sm-10">
            <InputText id="email" class="form-control" @bind-Value="Model!.Email"/>
            <ValidationMessage For="() => Model.Email"/>
            @* <input type="email" class="form-control" id="email" name="email"> *@
        </div>
    </div>
    <div class="row mb-3">
        <label for="password" class="col-sm-2 col-form-label">Password</label>
        <div class="col-sm-10">
            <input type="password" class="form-control" id="password" name="password">
        </div>
    </div>
    <div class="row">
        <div class="col-sm-10 offset-sm-2">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="remember">
                <label class="form-check-label" for="remember">Remember me</label>
            </div>
        </div>
    </div>
    <hr/>
    
    @if (IsLoggingIn)
    {
        <button id="logging-in" class="btn btn-primary align-self-center" disabled>
            <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
            <span role="status">Logging in...</span>
        </button>
    }
    else
    {
        <button type="submit" class="btn btn-primary align-self-center">Log in</button>
    }
</EditForm>

@code {
    public class LoginModel
    {
        [EmailAddress]
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    [SupplyParameterFromForm] 
    public LoginModel? Model { get; set; } = new();

    [Parameter]
    public string FormName { get; set; } = "loginForm";

    private bool IsLoggingIn { get; set; }
    private string? Error { get; set; }
    
    public async Task Submit()
    {
        IsLoggingIn = true;
        await Task.Delay(1000);
        IsLoggingIn = false;
        Error = "Incorrect e-mail and/or password.";
    }
}